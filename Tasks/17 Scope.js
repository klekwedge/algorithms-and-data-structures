var name = 'John';

function printName() {
  console.log(name);
  var name = 'Peter';
  console.log(name);
}

printName(); // undefined Peter

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////

function foo() {
  return { bar: 1 };
}

console.log(typeof foo().bar); // number

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////

console.log(message); // undefined
var message = 'Hello';

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////

let name = 'John';
function printName() {
  console.log(name);
}

setTimeout(() => {
  let name = 'Peter';
  printName();
}, 1000);

// John

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////

console.log(
  (function (a) {
    arguments[0] = 10;
    return a;
  })(5)
);
// 10

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////

const details = {
  name: 'John!',
};

function getMessage(message) {
  return `${message} ${this.name}`;
}

console.log(getMessage.apply(details, ['Hello'])); // Hello John!

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////

for (var i = 0; i < 10; i++) {}

console.log(i); // 10

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////

console.log(message); // ReferenceError: Cannot access 'message' before initialization
let message = 'Hello';

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////

printMessage(); // Hello!

function printMessage() {
  console.log('Hello!');
}

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////

function getThis() {
  return this;
}

console.log(getThis()); // [object Window]

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////

var a = 1,
  b = function a(x) {
    x && a(--x);
  };
console.log(a); // 1

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////

var name = 'John';
var user = {
  name: 'Peter',
  printMessage() {
    console.log(`Hello, ${this.name}!`);
  },
};

var printMessage = user.printMessage;
printMessage(); // Hello, undefined!

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////

for (let i = 0; i < 3; i++) {
  setTimeout(function () {
    console.log(i);
  }, 1000);
}

// 0
// 1
// 2

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////

function foo() {
  console.log(this);
}

foo.call(null); // window

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////

function foo(a, b) {
  return a * b;
}

const bar = foo.bind(null, 2);
console.log(bar(2)); // 4

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////

let name = 'John';
function printName() {
  let name = 'Peter';
  console.log(name);
}
printName(); // Peter

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////

for (var i = 0; i < 3; i++) {
  setTimeout(() => {
    console.log(i);
  }, 1000);
}

// 3
// 3
// 3

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////

// 'use strict'; // <--- On
const details2 = {
  message: 'Hello',
};

function getMessage() {
  return this.message;
}

console.log(getMessage.call(details2)); // Hello

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
const foo = bar();
const number = 2;
function bar() {
  return number;
}

console.log(foo); // ReferenceError: Cannot access 'number' before initialization

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
// 'use strict'; // <--- On
function getThis() {
  return this;
}

console.log(getThis()); // undefined

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////

let f = function g() {
  return 23;
};

console.log(typeof g()); // ReferenceError: g is not defined

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////

console.log(typeof []); // object
console.log(typeof function(){}); // function
console.log(typeof {}); // object

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////

